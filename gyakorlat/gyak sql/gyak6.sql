/*1. Hozzunk létre egy sorszámgenerátort (Sequence) 
és kérdezzük le a következõ értékét, aktuális értékét!*/

CREATE SEQUENCE sorszámpróba START WITH 1000 INCREMENT BY 10;
SELECT sorszámpróba.nextval FROM dual;
SELECT sorszámpróba.currval FROM dual;

/*2. Töröljük ki az összes táblánakat és sorozatunkat!*/

SELECT * FROM user_objects
ORDER BY object_type;

SELECT 
'drop '|| object_type ||' '
||object_name
||case when lower(object_type)='table' then ' purge;' else ';' end Lefuttatni
FROM user_objects
where lower(object_type) in ('table','sequence') and lower(generated)='n'
ORDER BY created DESC;

select * from user_objects;

/*3. Hozzunk létre egy KOLCSONZO táblát, azonosító és név legyen benne. 
Az azonosító automatikusan generálódjon!*/

CREATE TABLE kolcsonzo
(kid NUMBER(4) GENERATED AS IDENTITY PRIMARY KEY
,nev VARCHAR2(40));

INSERT INTO kolcsonzo
VALUES(
10
,'Mézga Géza'
);

INSERT INTO kolcsonzo(nev)
VALUES('Mézga Géza');
INSERT INTO kolcsonzo(nev)
VALUES('Mézga Aladár');
INSERT INTO kolcsonzo(nev)
VALUES('Hufnágel Pisti');

SELECT * FROM kolcsonzo;
ROLLBACK;

COMMIT;


DROP TABLE kolcsonzo PURGE;

CREATE TABLE kolcsonzo
(kid NUMBER(4) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,nev VARCHAR2(40));

INSERT INTO kolcsonzo
VALUES(
10
,'Mézga Géza'
);


INSERT INTO kolcsonzo(nev)
VALUES('Mézga Géza');
INSERT INTO kolcsonzo(nev)
VALUES('Mézga Aladár');
INSERT INTO kolcsonzo(nev)
VALUES('Hufnágel Pisti');

SELECT * FROM kolcsonzo;

/*Hozzunk létre egy kölcsönzés táblát! Sorszámmal, hivatkozással a kolcsonzo
táblára és könyvcímmel!*/

CREATE TABLE kolcsonzes(
sorszam NUMBER(5) GENERATED AS IDENTITY PRIMARY KEY
,kolcsonzo NUMBER(3) REFERENCES kolcsonzo (kid)
,konyv VARCHAR2(40)
);

INSERT INTO kolcsonzes(kolcsonzo, konyv)
VALUES(
'10'
,'Ûrutazás'
);

INSERT INTO kolcsonzes(kolcsonzo, konyv)
VALUES(
'10'
,'Ûrutazás2'
);

select * from kolcsonzes;

drop table kolcsonzo purge;

drop table kolcsonzes purge;

CREATE TABLE kolcsonzes(
sorszam NUMBER(5) GENERATED AS IDENTITY PRIMARY KEY
,kolcsonzo NUMBER(3) 
,konyv VARCHAR2(40)
,foreign key (kolcsonzo)REFERENCES kolcsonzo (kid)
);

select * from user_objects;
select * from user_constraints;

/******************/
/*Csoport feladat:*/
/******************/

/*1. A 3 leírás közül a felesleges kettõt töröljék ki, a harmadikat pedig tervezzék
meg az oktatóval közösen!*/

/*A Szálláshely séma instrukciói:

Egy szálláshely közvetítõ oldal egyszerûsített adatbázisát kell 
megterveznünk, amelyben tároljuk a szálláshelyek, az ügyfelek 
és a foglalások adatait. 

Az ügyfeleink magánszemélyek, akik regisztrációval kerülnek 
az adatbázisunkba, ahol meg kell adniuk logint, e-mail címet, 
nevet, születési adatokat, számlázási címet.
Nem lehet két regisztráció azonos e-mail címmel.

A szálláshelyekrõl tárolunk különbözõ adatokat: legyen nevük, 
típusuk, kapacitásuk (szobaszám, összes férõhely), címük, területi 
elhelyezkedésük. 
A szálláshelyeket munkatársaink rögzítik az adatbázisban, így 
legyen egy mezõ, ami a felvivõ azonosítóját tárolja és a felvitel 
dátumát (mindkettõt default).

A szálláshelyek szobáit is tároljuk le külön-külön. Csak alap 
adatok legyenek, azonosító, szobaszám, ágyszám, pótágy, légkondi.

Tároljuk még a foglalások adatait is. Melyik felhasználó, mikor, 
mikorra hány fõ felnõtt, hány fõ gyerekre foglalta. Lehet itt egy 
megjegyzés rovat is.
*/

/*Az Egyetem séma instrukciói:

Egy egyetem egyszerûsített adatbázisát kell megterveznünk, 
amelyben tároljuk a hallgatók adatait, valamint a tárgyakat 
és az abból elért eredményeket. Az eredmények félévekre oszlanak. 

A hallgatókról tároljuk az egyedi azonosítójukat, nevüket, 
születésüket. Ezen kívül a tanulmányaik kezdésének dátumát 
(ami valamelyik év szeptember 1. vagy február 1. lehet), illetve a szakját.

A tantárgyaknak van egyedi kódja, nem feltétlenül egyedi neve, 
kreditértéke és besorolása (kötelezõ, kötelezõen választható, választható), 
tantárgyfelelõse és egy szervezeti egység, amihez tartozik. 
Ezen kívül van egy leírás mezõ is a tantárgyleírás számára.

A hallgatók a tárgyakat különbözõ félévekben vehetik fel és ott 
különbözõ eredményeik lehetnek. Egy tárgyat többször is fel lehet 
venni és egy felvétel alkalmával is több eredmény születhet. 
Az eredmény lehet egy osztályzat, vagy egyéb (nem vizsgázott, 
nem jelent meg, igazoltan nem jelent meg). 

Az eredményeket munkatársaink rögzítik az adatbázisban, így 
legyen egy mezõ, ami a felvivõ azonosítóját tárolja és a 
felvitel dátumát (mindkettõt default).
*/

/*A Webáruház séma instrukciói:

Egy webáruház egyszerûsített adatbázisát kell megterveznünk, 
amelyben tároljuk a termékeket, az ügyfeleket és a rendeléseiket. 

A termékekrõl tárolunk egy egyedi termékkódot, megnevezést, 
listaárat, kategóriát, leírást, melyik raktárunkban van és 
mekkora készletünk van belõle. 
A termékeket munkatársaink rögzítik az adatbázisban, így 
legyen egy mezõ, ami a felvivõ azonosítóját tárolja és a 
felvitel dátumát (mindkettõt default).

A vevõink regisztrációval kerülnek az adatbázisunkba, ahol 
meg kell adniuk logint, e-mail címet, nevet, születési adatokat, 
nemet, számlázási címet. Nem lehet két regisztráció azonos e-mail címmel.

Egy idõben egy rendelést lehet leadni egyféle kiszállítási dátummal, 
móddal és címmel és számlázási címmel, de egy rendelési kosárban több 
tétel is szerepelhet, ahol az ár eltérhet a listaártól.
*/

/*2. Hozzák létre a közösen megtervezett adatbázist!*/
