/*1.	Töröljük az eddigi tábláinkat (mint múlt héten)!*/

SELECT * FROM user_objects
ORDER BY object_type;

SELECT 
'drop '|| object_type ||' '
||object_name
||CASE WHEN lower(object_type)='table' THEN ' purge;' ELSE ';' END lefuttatni
FROM user_objects
WHERE lower(object_type) IN ('table','sequence') AND lower(GENERATED)='n'
ORDER BY created DESC;

/*2.	Hozzuk létre a kolcsonzo és kolcsonzes táblákat 
másolással a MINTA sémából!*/

-- másolással csak az adattípusok és a nott null jön át, semmi más: default-okat és kényszereket módosítással tudjuk beállítani az új táblákban

CREATE TABLE kolcsonzo
AS SELECT * FROM minta.kolcsonzo;

CREATE TABLE kolcsonzes
AS SELECT * FROM minta.kolcsonzes;

DESC kolcsonzo
DESC kolcsonzes
SELECT * FROM kolcsonzo;
SELECT * FROM kolcsonzes;

-- ALTER TABLE - a következõkkel fogunk foglalkozni (mást is lehet): lehet táblajellemzõt módosítani (csak az átnevezést nézzük), lehet oszlopokat és a kényszereket
-- név módosítása: ALTER TABLE táblanév RENAME TO újnév (ALTER TABLE kolcsonzo RENAME TO kolcsonzo2;)


/*3.	Egészítsük ki a kolcsonzo táblát néhány új oszloppal! 
Legyen köztük DEAFULT értékes is! Legyen külön 
vezetéknév és keresztnév is!*/

-- Oszlop módosítás: lehet többet is összefûzni szóközökkel.
-- Lehet hozzáadni: ADD, módosítani: MODIFY és törölni: DROP valamint átnevezni: RENAME. 
-- Hozzáadásnál és módosításnál ugyanúgy kell megadni az oszlopot, mint a CREATE TABLE-n belül: név, típus, esetleges default és kényszerek.
-- Az a különbség, hogy módosítás után csak azt kell felsorolnunk az oszlopnév után, amit módosítunk, a többi marad ugyanaz.
-- Törlésnél csak vesszõvel elválasztva fel kell sorolni a törlendõ oszlopneveket, illetve ha vannak rá kényszerek, akkor csak a CASCADE CONSTRAINTS kiegészítéssel fog sikerülni
-- ALTER TABLE táblanév ADD (oszlopmegadás, …);
-- ALTER TABLE táblanév MODIFY (oszlopnév módosított_jellemzõ);
-- ALTER TABLE táblanév DROP (oszlopnév,…) CASCADE CONSTRAINTS;
-- ALTER TABLE táblanév RENAME COLUMN réginév TO újnév;
-- Nem biztos, hogy mindent lehet kombinálni mindennel, az a biztos, ha az egyes feladatokat külön oldjuk meg.



ALTER TABLE kolcsonzo ADD(
 beiratkozas DATE DEFAULT trunc(SYSDATE)
,kor NUMBER(3)
,vnev VARCHAR2(32)
,knev VARCHAR2(32)
);

SELECT * FROM kolcsonzo;

/*4.	Módosítsuk az azonosító oszlopot, hogy automatikus sorszámozású 
legyen, a kezdõsszám legyen nagyobb, mint a már táblában szereplõ azonosítók!*/

SELECT kid FROM kolcsonzo ORDER BY 1 DESC;

ALTER TABLE kolcsonzo MODIFY(
kid GENERATED BY DEFAULT AS IDENTITY(START WITH 63));
/*nem engedi! Töröljük az adatokat és a kid oszlopot, majd adjuk hozzá
azonosító oszlopként!*/

-- egy már nem identityként létrehozott oszlopból nem tudunk identity-t csinálni. 
-- Kénytelenek vagyunk mindent kitörölni a táblából, majd a KID oszlopot eldobni és újra létrehozni jól, majd visszatölteni az adatokat.

DELETE FROM kolcsonzo;
ALTER TABLE kolcsonzo DROP (kid);
ALTER TABLE kolcsonzo ADD(
kid NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 63));

INSERT INTO kolcsonzo(kid,nev,nem)
SELECT * FROM minta.kolcsonzo;
COMMIT;

SELECT * FROM KOLCSONZO;

-- desc kolcsonzo: NEM VARCHAR2(1), ezért ffi nem fog beleférni
INSERT INTO KOLCSONZO(VNEV,KNEV,NEM)
VALUES('Mézga','Géza','FFI');

/*5.	Módosítsuk az egyik új oszlop adattípusát oda majd vissza! 
Módosítsuk a nem adattípusát: számra, 
majd 1 karakteresrõl 3 karakteresre,
vissza 1 karakteresre
végül legyen 3 karateres!*/


desc kolcsonzo

ALTER TABLE kolcsonzo MODIFY(
kor DATE
);

ALTER TABLE kolcsonzo MODIFY(
kor NUMBER(3)
);

ALTER TABLE kolcsonzo MODIFY(
nem NUMBER(1)
); 

-- ne teljesen higgyük el a hibaüzenetet!
-- az oszlopnak üresnek kell lenni az adattípusának módosításakor?
-- Fõ szabályok: üres oszlop adattípusa bármire módosítható
-- ha már van benne adat, akkor csak a szöveg módosítható: hosszabra bármikor, rövidebbre csak akkor, ha az összes bentlévõ adat befér

ALTER TABLE kolcsonzo MODIFY(
nem VARCHAR2(3)
);

/*6.	Egy kis DML: töltsük fel az új oszlopokat: 3 karakteres nem: 
ffi,nõ, vezetéknév keresztnév az eredeti név oszlop darabolásával*/

SELECT * FROM kolcsonzo;

UPDATE kolcsonzo
SET nem=decode(nem,'N','NÕ','F','FFI') -- ha n, akkor legyen nõ, ha f, akkor legyen ffi
,vnev=substr(nev,1,instr(nev,' ')-1) -- elsõ szóközig
,knev=substr(nev,instr(nev,' ')+1); -- elsõ szóköztöl

SELECT * FROM kolcsonzo;
COMMIT;

/*7.	Módosítsuk a nem oszlopot most 1 karakteresre!*/

-- nem lehet csökkenteni az oszlopszélességet, mert bizonyos értékek túl nagyok
ALTER TABLE kolcsonzo MODIFY(
nem VARCHAR2(1)
);

/*8.	Töröljük a név oszlopot!*/

ALTER TABLE kolcsonzo DROP (nev);

select * from kolcsonzo;

/*9.	Adjunk hozzá kényszereket a kolcsonzo táblához: 
elsõdleges kulcs, életkor pozitív, a nem ne lehessen null érték!*/

-- Kényszer módosítása: ugyanúgy ADD, MODIFY, DROP és  RENAME lehet. 
-- Kell hozzá tudni a kényszer jelenlegi nevét. 
-- Hasznos katalógustábla: USER_CONSTRAINTS
-- Inline kényszert oszlopmódosítással is hozzá lehet adni!
-- A Constraint kulcsszóval bármikor adhatunk nevet a kényszereinknek, így ezt itt is megtehetnénk


desc kolcsonzo

ALTER TABLE kolcsonzo ADD (
PRIMARY KEY (kid)
,CONSTRAINT  kor_constraint CHECK (kor>=0)
,CONSTRAINT nem_constraint CHECK (nem IS NOT NULL)
);

SELECT * FROM user_constraints;

-- user_constraints tábla CONSTRAINT_NAME oszlopa másolandó
ALTER TABLE kolcsonzo DROP CONSTRAINT nem_constraint;
ALTER TABLE kolcsonzo RENAME CONSTRAINT kor_constraint TO kor_constraint2;

-- contraint tartalma nem módosítható
ALTER TABLE kolcsonzo MODIFY CONSTRAINT kor_constraint2 VALIDATE;


/******************/
/*ÖNÁLLÓ FELADATOK*/
/******************/

/*1.	Módosítsuk a sorszám oszlopot a kolcsonzes táblában,
hogy identity legyen és elsõdleges kulcs*/

/*2.	Módosítsuk a kolcsonzes táblát: adjunk hozzá egy 
datum oszlopot default sysdate-tel!*/

/*3.	Adjunk hozzá idegen kulcsot a kolcsonzes táblához, 
hogy a kolcsonzo oszlop hivatkozzon a kolcsonzo táblára!*/

/*4.	Másoljuk le a saját sémánkba a csoportséma tábláit 
(Gnn_sémanév, pl. G01_SZALLASHELY)!*/

/*5.	Módosítsuk azokat az oszlopokat (ha volt ilyen), 
amelyek automatikus sorszámozásúak!*/

/*6.	Módosítsuk mindegyik táblát: állítsuk be az e
lsõdleges és idegen kulcsokat!*/

/*7.	Módosítsuk a név oszlopot (valamelyik táblában biztosan 
van ilyesmi oszlop), hogy hosszab név is beleférjen!*/

/*8.	Módosítsuk valamelyik not null oszlopunkat, 
hogy megengedje a NULL értéket!*/

/*9.	Módosítsuk valamelyik oszlopunkat, hogy ne 
engedje meg a NULL értéket!*/

/*10.	Állítsuk be az elõzõ órán megbeszélt CHECK 
kényszereket a táblák módosításával!*/

/*11.	Az egyik táblában nincsenek adatok. 
A Moodle-ben lévõ Excel táblából töltsük be a szükséges 
adatokat ebbe a táblába. Ha szükséges, módosítsunk hozzá 
adattípust a táblában! (Nem minden adatra lesz szükségünk 
a táblázatokból!)*/