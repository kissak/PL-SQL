--Gyakorló feladatsorok
--A
/*1, Hozza létre az országok nevű táblát a minta séma ORSZAGADATOK táblájának átmásolásával! 
Módosítsa az országok táblát úgy, hogy az ország oszlop legyen elődleges kulcs! 
Hozzon létre egy versenyző nevű táblát, melyben tárolja a versenyzők azonosítóját, nevét, 
születési idejét, sportágát, aranyérmeinek számát, és hogy melyik ország színeiben versenyez. 
Legyen a táblában elsődleges kulcs! A versenyző táblába csak olyan országot lehessen rögzíteni, 
ami már szerepel az országok táblában! Tudjuk, hogy senkinek sincs 30-nál több aranya! Oldja meg,
hogy csak valós aranyéremszámot lehessen megadni! Az aranyérmek számának alapértelmezett értéke 0.*/
	
	CREATE TABLE orszagok AS SELECT * FROM minta.ORSZAGADATOK; 
	ALTER TABLE orszagok ADD(primary key(orszag)); 
	CREATE TABLE versenyzo ( 
	azonID number(6) primary key, 
	nev VARCHAR2(42), 
	szulev DATE, 
	sportag VARCHAR2(42), 
	aranyak NUMBER(2) DEFAULT 0 CHECK (aranyak between 0 and 30), 
	orszag VARCHAR2(42) REFERENCES orszagok(orszag) );
 
/*2, A minta séma RENDELESI_TETEL és TERMEK táblájának felhasználásával kérdezze le a hétfőn rögzített
 termékeket a különböző eladási egységáraikkal együtt! A listában csak azok a termékek jelenjenek meg,
 amelyeknek a leírása nem üres! Az eredményben ne legyenek ismétlődő sorok! Az eredményt termékre 
 rendezve jelenítse meg!*/
 
	select distinct a.termekkod, b.MEGNEVEZES, a.EGYSEGAR 
	from MINTA.RENDELESI_TETEL a 
	join MINTA.TERMEK b on a.TERMEKKOD=b.TERMEKKOD 
	where lower(to_char(b.FELVITEL_DATUM,'DAY')) like '%hétfő%' 
	and leiras is not null order by megnevezes;
 
 
/*3, A minta séma DVD táblájából olvassa ki rendezőnként azon filmek átlagos hosszát, amelyek 1960 után
 kerültek forgalomba, és amelyekhez nincs megadva első műfaj! Csak azok a rendezők jelenjenek meg, 
 akiknek kettőnél több filmje is megfelel a feltételeknek!*/
 
	SELECT rendezo, ROUND(AVG(hossz),2) atlag_hossz
	FROM minta.dvd
	WHERE EV > 1960
	AND mufaj1 IS NULL
	GROUP BY rendezo
	HAVING COUNT(film) > 2;
 
 
/*4, A minta séma dolgozo és fonok táblája segítségével listázza ki minden dolgozó adatait és azt is,
 hogy hány évvel fiatalabb a közvetlen főnökénél. Természetesen ez lehet negatív szám is. (Figyelem,
 csak a közvetlen főnök kell!)*/
 
	select d.*,fon.szuldat fonok_szuldat, 
	round(months_between(d.szuldat,fon.szuldat)/12,2) fiatalabb 
	from minta.dolgozo d 
	join minta.fonok f on d.id=f.id
	join minta.dolgozo fon on f.fonok_id=fon.id;
 
 
/*5, A minta séma termek táblájából írja ki azoknak a termékeknek az adatait, amelyeket csomagban 
tartunk nyilván! Írja ki azt is, hogy az egyes termékek kategóriájában átlagosan mekkora a készlet!*/
	
	SELECT t.*, 
	avg(keszlet) OVER (PARTITION BY kategoria) 
	AS kategoria_atlagkeszlet
	FROM minta.termek t
	where mennyisegi_egys = 'csomag';
/*6, Másolja le a saját sémájába a minta séma dolgozo tábláját. Írja be a táblába a minta séma kölcsönző
 táblájának adatait a következő módon: 
•	-ID: a kolcsonzo tábla KID mezője 500-zal eltolva
•	-VNEV,KNEV: a kolcsonzo tábla NEV mezője az első szóköznél kettébontva
•	-SZULDAT: a kolcsonzo tábla SZULDAT mezője
•	-NEM: a kolcsonzo tábla NEM oszlopba átkódolva (férfiak 0, nők 1) 
•	-FELV NAP: a kolcsonzo tábla BEIRATKOZAS dátuma utáni következő hónap első napja
A bevitelt véglegesítse*/
	create table dolgozo as select * from minta.dolgozo;
	insert into dolgozo
	select
	kid+500,
	substr(nev,1,instr(nev,' ')-1),
	substr(nev,instr(nev,' ')+1),
	szuldat,
	decode(nem,'F',0,'N',1),
	last_day(beiratkozas)+1
	from minta.kolcsonzo;
	commit;
/*7, Kérdezze le a minta séma dolgozo és fonok táblája segítségével a 60-as kódú főnök összes beosztottja
 közül azokat, akik az egész céget tekintve a nemük 10. legidősebb tagjánál legalább 2 évvel fiatalabbak!*/
 
	select d.*, viszonyitas
	from
	minta.dolgozo d join
	(select distinct nem, szuldat viszonyitas
	from
	(select nem,szuldat, rank() over(partition by nem order by szuldat) rang from
	minta.dolgozo d)
	where rang=10) v
	on d.nem=v.nem
	where szuldat>=add_months(viszonyitas,24)
	and id in
	(select id from minta.fonok
	start with fonok_id=60
	connect by fonok_id=prior id)
	;
--B
/*1, Hozzon létre egy szállítók és egy áruk nevű táblát!  A szállítók adatai közül a nevüket,
 szerződéskötésük dátumát és a besorolását tároljuk. Legyen a szállító táblában egy azonosító
 mező is. A besorolás oszlopba csak két érték közül lehessen egyet megadni: kiemelt vagy nem 
 kiemelt. Az alapértelmezett értéke legyen a nem kiemeltet jelölő kód. Az áruknak van egy egyedi
 azonosítója, tároljuk a nevét, egységárát és a szállító kódját! Mindkét táblában legyen elsődleges
 kulcs, és oldja meg, hogy ne lehessen az áruhoz olyan szállítót rendelni az áruk táblában, aki 
 nincs benne a szállítók táblában!*/
	
	create table szallitok(
	szid number(3) generated by default as identity primary key
	, nev varchar2(40) not null
	, szerz_datum date
	, besorolas number(1) default 0 check(besorolas between 0 and 1));
	
	create table aruk(
	aid number(3) generated by default as identity primary key
	, nev varchar2(40) not null
	, egysegar number(3)
	, szallito_kod references szallitok(szid));
 
 
/*2, A minta séma UGYFEL és RENDELES tábláját használva jelenítse meg, hogy a gmail-es címmel
 rendelkező ügyfelek 2017. februári rendeléseinek milyen különböző kiszállítási módjai vannak!
 A lekérdezésben jelenítse meg az ügyfelet és a kiszállítás módját! Az eredményben ne legyenek
 ismétlődő sorok! Az eredményt ügyfélre rendezve jelenítse meg!*/
	
	select distinct u.email, u.vnev, u.knev, r.SZALLITASI_MOD
	from minta.ugyfel u join minta.rendeles r
	on u.LOGIN= r.LOGIN
	where r.RENDELESI_IDO between to_date('2017.02','YYYY.MM') and to_date('2017.03','YYYY.MM')
	order by 2,3,4;
 
 
/*3, A minta séma TERMEK táblájából olvassa ki, hogy mekkora az átlagos listaára azoknak a 
termékeknek kategóriánként, amelyeket Sára vett fel, és nincs megadva a leírásuk! Csak azokat a
 kategóriákat jelenítse meg, amelyekben négynél több termék felel meg a feltételeknek!*/
 
	SELECT AVG(minta.TERMEK.LISTAAR) atlagos_listaar, KATEGORIA
	FROM minta.TERMEK
	WHERE FELVITTE = 'Sára' AND LEIRAS IS NULL
	GROUP BY KATEGORIA
	HAVING COUNT(*) > 4
	;
 
/*4, A minta séma kolcsonzes és dvd tábláinak felhasználásával kérdezze le, hogy azok közül
 a filmek közül, melyeket még soha nem kölcsönöztek ki, hány esik az egyes besorolásokba!*/
	
	select besorolas, count(*)
	from minta.dvd left join minta.kolcsonzes using (film)
	where kolcsonzo is null
	group by besorolas;
 
 
/*5, A minta séma dolgozó táblájából írja ki a dolgozók adatait és azt, hogy mikor született,
 akit közvetlenül előtte vettünk fel. Csak azokat írjuk ki, akik előtt fiatalabb dolgozót vettünk fel.*/
 
	select * from
	(select d.*, lag(szuldat) over (order by felv_nap) elozo_szuldat
	from minta.dolgozo d)
	where szuldat<elozo_szuldat;
 
 
/*6, Másolja le a saját sémájába a minta séma dolgozo tábláját. Írja be a táblába a minta 
séma kölcsönző táblájának adatait a következő módon: 
•	-ID: a kolcsonzo tábla KID mezője 500-zal eltolva
•	-VNEV,KNEV: a kolcsonzo tábla NEV mezője az első szóköznél kettébontva
•	-SZULDAT: a kolcsonzo tábla SZULDAT mezője
•	-NEM: a kolcsonzo tábla NEM oszlopba átkódolva (férfiak 0, nők 1) 
•	-FELV NAP: a kolcsonzo tábla BEIRATKOZAS dátuma utáni következő hónap első napja
A bevitelt véglegesítse*/

	create table s_dolgozo as select * from minta.dolgozo;
	insert into s_dolgozo
	select
	kid+500,
	substr(nev,1,instr(nev,' ')-1),
	substr(nev,instr(nev,' ')+1),
	szuldat,
	decode(nem,'F',0,'N',1),
	last_day(beiratkozas)+1
	from minta.kolcsonzo;
	commit;
/*7, Kérdezze le a minta séma dolgozo és fonok táblája segítségével a 60-as kódú főnök összes
 beosztottja közül azokat, akik az egész céget tekintve a nemük 10. legidősebb tagjánál legalább
 2 évvel fiatalabbak!*/
 
	select d.*, viszonyitas
	from
	minta.dolgozo d join
	(select distinct nem, szuldat viszonyitas
	from
	(select nem,szuldat, rank() over(partition by nem order by szuldat) rang from
	minta.dolgozo d)
	where rang=10) v
	on d.nem=v.nem
	where szuldat>=add_months(viszonyitas,24)
	and id in
	(select id from minta.fonok
	start with fonok_id=60
	connect by fonok_id=prior id);